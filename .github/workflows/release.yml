# GitHub Action to auto-magically publish versions
# for tagged commits
name: release

# Run on every push (with version tag)
on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-18.04

    # Required for publishing to GH Packages
    permissions:
      contents: write
      packages: write

    steps:
      # Obtain tag name (version number)
      - uses: olegtarasov/get-tag@v2.1
        id: tagName

      # Parse tag name out to version number
      - id: vers
        run: |
          num=$(echo ${{ steps.tagName.outputs.tag }} | cut -dv -f2)
          echo "::set-output name=num::$num"

      # Checkout repository & Setup JDK
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 8

      # Setup & Restore caches
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ./accesstransformer.cfg
            ./build
          key: ${{ runner.os }}-gradle

      # Remove problematic files
      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
          if [ -d ./build/_applyBinpatches_2/ ]; then rm -r ./build/_applyBinpatches_2/; fi
          if [ -d ./build/tmp/sourcesJar/ ]; then rm -r ./build/tmp/sourcesJar/; fi
          if [ -d ./build/_applyBinpatches_3/ ]; then rm -r ./build/_applyBinpatches_3/; fi
          if [ -d ./build/_atJar_5/ ]; then rm -r ./build/_atJar_5/; fi
          if [ -d ./build/_RenameSrg2Mcp_*/ ]; then rm -r ./build/_RenameSrg2Mcp_*/; fi
          if [ -d ./build/classes/ ]; then rm -r ./build/classes/; fi
          if [ -d ./build/downloadMCMeta/ ]; then rm -r ./build/downloadMCMeta/; fi
          if [ -d ./build/downloadMcpConfig/ ]; then rm -r ./build/downloadMcpConfig/; fi
          if [ -d ./build/generated/ ]; then rm -r ./build/generated/; fi
          if [ -d ./build/libs/ ]; then rm -r ./build/libs/; fi
          if [ -d ./build/natives/ ]; then rm -r ./build/natives/; fi
          if [ -d ./build/reobfJar/ ]; then rm -r ./build/reobfJar/; fi
          if [ -d ./build/reobfShadowJar/ ]; then rm -r ./build/reobfShadowJar/; fi
          if [ -d ./build/resources/ ]; then rm -r ./build/resources/; fi
          if [ -d ./build/tmp/_compileJava_2/ ]; then rm -r ./build/tmp/_compileJava_2/; fi
          if [ -d ./build/tmp/_compileJava_4/ ]; then rm -r ./build/tmp/_compileJava_4/; fi
          if [ -d ./build/tmp/compileJava/ ]; then rm -r ./build/tmp/compileJava/; fi
          if [ -d ./build/tmp/deobfJar/ ]; then rm -r ./build/tmp/deobfJar/; fi
          if [ -d ./build/tmp/jar/ ]; then rm -r ./build/tmp/jar/; fi
          if [ -d ./build/tmp/reobfJar/ ]; then rm -r ./build/tmp/reobfJar/; fi
          if [ -d ./build/tmp/shadowJar/ ]; then rm -r ./build/tmp/shadowJar/; fi

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper

      # Validate Gradle Wrapper
      - uses: gradle/wrapper-validation-action@v1
      - run: chmod +x ./gradlew

      # Generate Minecraft Assets & Data files
      - run: ./gradlew Data # `Data` should match the `runData` gradle task name

      # Build package
      - run: ./gradlew build

      # Publish to GitHub Packages
      - run: ./gradlew publish
        env:
          APEX_MODS_MAVEN_USERNAME: ${{ secrets.APEX_MODS_MAVEN_USERNAME }}
          APEX_MODS_MAVEN_PASSWORD: ${{ secrets.APEX_MODS_MAVEN_PASSWORD }}

      # Use 'Publish Minecraft Mods' action to publish to various mod hosting sources
      - uses: Kir-Antipov/mc-publish@v2.1
        with:
          modrinth-id: fw1dEJE1
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}

          curseforge-id: 550146
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}

          name: Registrator-1.16.5-${{ steps.vers.outputs.num }}
          version: ${{ steps.vers.outputs.num }}
          version-type: release
          loaders: forge
          game-versions: 1.16.5
          java: 8
          files: ''
          files-primary: build/libs/!(*-@(deobf|slim|sources)).jar
          files-secondary: build/libs/*-@(deobf|slim|sources).jar

      # Kill gradlew deamon (caching requires gradle to not be running)
      - run: ./gradlew --stop

      # Remove problematic files
      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
          if [ -d ./build/_applyBinpatches_2/ ]; then rm -r ./build/_applyBinpatches_2/; fi
          if [ -d ./build/tmp/sourcesJar/ ]; then rm -r ./build/tmp/sourcesJar/; fi
          if [ -d ./build/_applyBinpatches_3/ ]; then rm -r ./build/_applyBinpatches_3/; fi
          if [ -d ./build/_atJar_5/ ]; then rm -r ./build/_atJar_5/; fi
          if [ -d ./build/_RenameSrg2Mcp_*/ ]; then rm -r ./build/_RenameSrg2Mcp_*/; fi
          if [ -d ./build/classes/ ]; then rm -r ./build/classes/; fi
          if [ -d ./build/downloadMCMeta/ ]; then rm -r ./build/downloadMCMeta/; fi
          if [ -d ./build/downloadMcpConfig/ ]; then rm -r ./build/downloadMcpConfig/; fi
          if [ -d ./build/generated/ ]; then rm -r ./build/generated/; fi
          if [ -d ./build/libs/ ]; then rm -r ./build/libs/; fi
          if [ -d ./build/natives/ ]; then rm -r ./build/natives/; fi
          if [ -d ./build/reobfJar/ ]; then rm -r ./build/reobfJar/; fi
          if [ -d ./build/reobfShadowJar/ ]; then rm -r ./build/reobfShadowJar/; fi
          if [ -d ./build/resources/ ]; then rm -r ./build/resources/; fi
          if [ -d ./build/tmp/_compileJava_2/ ]; then rm -r ./build/tmp/_compileJava_2/; fi
          if [ -d ./build/tmp/_compileJava_4/ ]; then rm -r ./build/tmp/_compileJava_4/; fi
          if [ -d ./build/tmp/compileJava/ ]; then rm -r ./build/tmp/compileJava/; fi
          if [ -d ./build/tmp/deobfJar/ ]; then rm -r ./build/tmp/deobfJar/; fi
          if [ -d ./build/tmp/jar/ ]; then rm -r ./build/tmp/jar/; fi
          if [ -d ./build/tmp/reobfJar/ ]; then rm -r ./build/tmp/reobfJar/; fi
          if [ -d ./build/tmp/shadowJar/ ]; then rm -r ./build/tmp/shadowJar/; fi